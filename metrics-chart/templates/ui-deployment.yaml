apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.ui.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.ui.name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.ui.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.ui.name }}
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: {{ .Values.ui.name }}
        release: "{{ .Release.Name }}"
    spec:
      containers:
        - name: {{ .Values.ui.name }}
          image: "{{ .Values.ui.image.repository }}:{{ .Values.ui.image.tag }}"
          imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
          env:
            - name: NEXT_PUBLIC_API_URL
              value: "https://api-metrics-demandbase.rileyseaburg.com"
            - name: NODE_ENV
              value: "production"
          ports:
            - containerPort: {{ .Values.ui.service.targetPort }}
          resources:
            limits:
              cpu: {{ .Values.ui.resources.limits.cpu }}
              memory: {{ .Values.ui.resources.limits.memory }}
            requests:
              cpu: {{ .Values.ui.resources.requests.cpu }}
              memory: {{ .Values.ui.resources.requests.memory }}
          readinessProbe:
            httpGet:
              path: {{ .Values.ui.probes.readiness.path }}
              port: {{ .Values.ui.probes.readiness.port }}
            initialDelaySeconds: {{ .Values.ui.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.ui.probes.readiness.periodSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.ui.probes.liveness.path }}
              port: {{ .Values.ui.probes.liveness.port }}
            initialDelaySeconds: {{ .Values.ui.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.ui.probes.liveness.periodSeconds }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.ui.name }}-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.ui.name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    app: {{ .Values.ui.name }}
    release: "{{ .Release.Name }}"
  ports:
    - port: {{ .Values.ui.service.port }}
      targetPort: {{ .Values.ui.service.targetPort }}
  type: {{ .Values.ui.service.type }}